package DauctionApp;


/**
* DauctionApp/_DauctionStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Dauction.idl
* Tuesday, April 5, 2016 2:04:37 PM CDT
*/

public class _DauctionStub extends org.omg.CORBA.portable.ObjectImpl implements DauctionApp.Dauction
{

  public boolean offer_item (String item_name, String seller_id, float init_price) throws DauctionApp.DauctionPackage.IncorrectOfferException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("offer_item", true);
                $out.write_string (item_name);
                $out.write_string (seller_id);
                $out.write_float (init_price);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:DauctionApp/Dauction/IncorrectOfferException:1.0"))
                    throw DauctionApp.DauctionPackage.IncorrectOfferExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return offer_item (item_name, seller_id, init_price        );
            } finally {
                _releaseReply ($in);
            }
  } // offer_item

  public String view_high_bidder (String item_name) throws DauctionApp.DauctionPackage.IncorrectSellException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("view_high_bidder", true);
                $out.write_string (item_name);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:DauctionApp/Dauction/IncorrectSellException:1.0"))
                    throw DauctionApp.DauctionPackage.IncorrectSellExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return view_high_bidder (item_name        );
            } finally {
                _releaseReply ($in);
            }
  } // view_high_bidder

  public boolean sell (String item_name) throws DauctionApp.DauctionPackage.IncorrectSellException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("sell", true);
                $out.write_string (item_name);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:DauctionApp/Dauction/IncorrectSellException:1.0"))
                    throw DauctionApp.DauctionPackage.IncorrectSellExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return sell (item_name        );
            } finally {
                _releaseReply ($in);
            }
  } // sell

  public boolean bid (String user_id, float offer_price) throws DauctionApp.DauctionPackage.IncorrectBidException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("bid", true);
                $out.write_string (user_id);
                $out.write_float (offer_price);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:DauctionApp/Dauction/IncorrectBidException:1.0"))
                    throw DauctionApp.DauctionPackage.IncorrectBidExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return bid (user_id, offer_price        );
            } finally {
                _releaseReply ($in);
            }
  } // bid

  public String view_bid_status (String user_id) throws DauctionApp.DauctionPackage.IncorrectBidException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("view_bid_status", true);
                $out.write_string (user_id);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:DauctionApp/Dauction/IncorrectBidException:1.0"))
                    throw DauctionApp.DauctionPackage.IncorrectBidExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return view_bid_status (user_id        );
            } finally {
                _releaseReply ($in);
            }
  } // view_bid_status

  public DauctionApp.DauctionPackage.AuctionStatus view_auction_status () throws DauctionApp.DauctionPackage.IncorrectStatusException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("view_auction_status", true);
                $in = _invoke ($out);
                DauctionApp.DauctionPackage.AuctionStatus $result = DauctionApp.DauctionPackage.StatusHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:DauctionApp/Dauction/IncorrectStatusException:1.0"))
                    throw DauctionApp.DauctionPackage.IncorrectStatusExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return view_auction_status (        );
            } finally {
                _releaseReply ($in);
            }
  } // view_auction_status

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:DauctionApp/Dauction:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _DauctionStub
