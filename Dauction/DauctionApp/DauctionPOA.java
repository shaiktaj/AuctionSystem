package DauctionApp;


/**
* DauctionApp/DauctionPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Dauction.idl
* Tuesday, April 5, 2016 2:04:37 PM CDT
*/

public abstract class DauctionPOA extends org.omg.PortableServer.Servant
 implements DauctionApp.DauctionOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("offer_item", new java.lang.Integer (0));
    _methods.put ("view_high_bidder", new java.lang.Integer (1));
    _methods.put ("sell", new java.lang.Integer (2));
    _methods.put ("bid", new java.lang.Integer (3));
    _methods.put ("view_bid_status", new java.lang.Integer (4));
    _methods.put ("view_auction_status", new java.lang.Integer (5));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // DauctionApp/Dauction/offer_item
       {
         try {
           String item_name = in.read_string ();
           String seller_id = in.read_string ();
           float init_price = in.read_float ();
           boolean $result = false;
           $result = this.offer_item (item_name, seller_id, init_price);
           out = $rh.createReply();
           out.write_boolean ($result);
         } catch (DauctionApp.DauctionPackage.IncorrectOfferException $ex) {
           out = $rh.createExceptionReply ();
           DauctionApp.DauctionPackage.IncorrectOfferExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // DauctionApp/Dauction/view_high_bidder
       {
         try {
           String item_name = in.read_string ();
           String $result = null;
           $result = this.view_high_bidder (item_name);
           out = $rh.createReply();
           out.write_string ($result);
         } catch (DauctionApp.DauctionPackage.IncorrectSellException $ex) {
           out = $rh.createExceptionReply ();
           DauctionApp.DauctionPackage.IncorrectSellExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // DauctionApp/Dauction/sell
       {
         try {
           String item_name = in.read_string ();
           boolean $result = false;
           $result = this.sell (item_name);
           out = $rh.createReply();
           out.write_boolean ($result);
         } catch (DauctionApp.DauctionPackage.IncorrectSellException $ex) {
           out = $rh.createExceptionReply ();
           DauctionApp.DauctionPackage.IncorrectSellExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // DauctionApp/Dauction/bid
       {
         try {
           String user_id = in.read_string ();
           float offer_price = in.read_float ();
           boolean $result = false;
           $result = this.bid (user_id, offer_price);
           out = $rh.createReply();
           out.write_boolean ($result);
         } catch (DauctionApp.DauctionPackage.IncorrectBidException $ex) {
           out = $rh.createExceptionReply ();
           DauctionApp.DauctionPackage.IncorrectBidExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 4:  // DauctionApp/Dauction/view_bid_status
       {
         try {
           String user_id = in.read_string ();
           String $result = null;
           $result = this.view_bid_status (user_id);
           out = $rh.createReply();
           out.write_string ($result);
         } catch (DauctionApp.DauctionPackage.IncorrectBidException $ex) {
           out = $rh.createExceptionReply ();
           DauctionApp.DauctionPackage.IncorrectBidExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 5:  // DauctionApp/Dauction/view_auction_status
       {
         try {
           DauctionApp.DauctionPackage.AuctionStatus $result = null;
           $result = this.view_auction_status ();
           out = $rh.createReply();
           DauctionApp.DauctionPackage.AuctionStatusHelper.write (out, $result);
         } catch (DauctionApp.DauctionPackage.IncorrectStatusException $ex) {
           out = $rh.createExceptionReply ();
           DauctionApp.DauctionPackage.IncorrectStatusExceptionHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:DauctionApp/Dauction:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Dauction _this() 
  {
    return DauctionHelper.narrow(
    super._this_object());
  }

  public Dauction _this(org.omg.CORBA.ORB orb) 
  {
    return DauctionHelper.narrow(
    super._this_object(orb));
  }


} // class DauctionPOA
